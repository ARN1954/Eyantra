vendor_name = ModelSim
source_file = 1, D:/eyantra/intelFPGAlite/20.01/projects/t2a_uart/uart_rx/code/uart_rx.v
source_file = 1, D:/eyantra/intelFPGAlite/20.01/projects/t2a_uart/uart_rx/db/uart_rx.cbx.xml
design_name = uart_rx
instance = comp, \rx_msg[0]~output , rx_msg[0]~output, uart_rx, 1
instance = comp, \rx_msg[1]~output , rx_msg[1]~output, uart_rx, 1
instance = comp, \rx_msg[2]~output , rx_msg[2]~output, uart_rx, 1
instance = comp, \rx_msg[3]~output , rx_msg[3]~output, uart_rx, 1
instance = comp, \rx_msg[4]~output , rx_msg[4]~output, uart_rx, 1
instance = comp, \rx_msg[5]~output , rx_msg[5]~output, uart_rx, 1
instance = comp, \rx_msg[6]~output , rx_msg[6]~output, uart_rx, 1
instance = comp, \rx_msg[7]~output , rx_msg[7]~output, uart_rx, 1
instance = comp, \rx_parity~output , rx_parity~output, uart_rx, 1
instance = comp, \rx_complete~output , rx_complete~output, uart_rx, 1
instance = comp, \clk_3125~input , clk_3125~input, uart_rx, 1
instance = comp, \clk_3125~inputclkctrl , clk_3125~inputclkctrl, uart_rx, 1
instance = comp, \rx~input , rx~input, uart_rx, 1
instance = comp, \bit_index[0]~3 , bit_index[0]~3, uart_rx, 1
instance = comp, \bit_index[2]~2 , bit_index[2]~2, uart_rx, 1
instance = comp, \bit_index[2] , bit_index[2], uart_rx, 1
instance = comp, \Decoder0~2 , Decoder0~2, uart_rx, 1
instance = comp, \data_buffer[2]~2 , data_buffer[2]~2, uart_rx, 1
instance = comp, \data_buffer[2] , data_buffer[2], uart_rx, 1
instance = comp, \Decoder0~3 , Decoder0~3, uart_rx, 1
instance = comp, \data_buffer[3]~3 , data_buffer[3]~3, uart_rx, 1
instance = comp, \data_buffer[3] , data_buffer[3], uart_rx, 1
instance = comp, \Decoder0~1 , Decoder0~1, uart_rx, 1
instance = comp, \data_buffer[1]~1 , data_buffer[1]~1, uart_rx, 1
instance = comp, \data_buffer[1] , data_buffer[1], uart_rx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_rx, 1
instance = comp, \Decoder0~5 , Decoder0~5, uart_rx, 1
instance = comp, \data_buffer[5]~5 , data_buffer[5]~5, uart_rx, 1
instance = comp, \data_buffer[5] , data_buffer[5], uart_rx, 1
instance = comp, \Decoder0~4 , Decoder0~4, uart_rx, 1
instance = comp, \data_buffer[4]~4 , data_buffer[4]~4, uart_rx, 1
instance = comp, \data_buffer[4] , data_buffer[4], uart_rx, 1
instance = comp, \Decoder0~7 , Decoder0~7, uart_rx, 1
instance = comp, \data_buffer[7]~7 , data_buffer[7]~7, uart_rx, 1
instance = comp, \data_buffer[7] , data_buffer[7], uart_rx, 1
instance = comp, \Decoder0~6 , Decoder0~6, uart_rx, 1
instance = comp, \data_buffer[6]~6 , data_buffer[6]~6, uart_rx, 1
instance = comp, \data_buffer[6] , data_buffer[6], uart_rx, 1
instance = comp, \Equal0~1 , Equal0~1, uart_rx, 1
instance = comp, \Equal0~2 , Equal0~2, uart_rx, 1
instance = comp, \counter[4]~1 , counter[4]~1, uart_rx, 1
instance = comp, \Selector4~0 , Selector4~0, uart_rx, 1
instance = comp, \counter[4]~0 , counter[4]~0, uart_rx, 1
instance = comp, \counter[1] , counter[1], uart_rx, 1
instance = comp, \Selector3~0 , Selector3~0, uart_rx, 1
instance = comp, \counter[2] , counter[2], uart_rx, 1
instance = comp, \Add1~2 , Add1~2, uart_rx, 1
instance = comp, \Selector2~0 , Selector2~0, uart_rx, 1
instance = comp, \counter[3] , counter[3], uart_rx, 1
instance = comp, \Add1~0 , Add1~0, uart_rx, 1
instance = comp, \Add1~1 , Add1~1, uart_rx, 1
instance = comp, \counter[4] , counter[4], uart_rx, 1
instance = comp, \Equal3~2 , Equal3~2, uart_rx, 1
instance = comp, \Equal3~3 , Equal3~3, uart_rx, 1
instance = comp, \Selector5~0 , Selector5~0, uart_rx, 1
instance = comp, \counter[0] , counter[0], uart_rx, 1
instance = comp, \Equal3~0 , Equal3~0, uart_rx, 1
instance = comp, \Equal3~1 , Equal3~1, uart_rx, 1
instance = comp, \Selector8~0 , Selector8~0, uart_rx, 1
instance = comp, \Selector8~1 , Selector8~1, uart_rx, 1
instance = comp, \state.parity , state.parity, uart_rx, 1
instance = comp, \state.stop~0 , state.stop~0, uart_rx, 1
instance = comp, \state.stop , state.stop, uart_rx, 1
instance = comp, \rx_msg[0]~0 , rx_msg[0]~0, uart_rx, 1
instance = comp, \state~14 , state~14, uart_rx, 1
instance = comp, \Selector6~0 , Selector6~0, uart_rx, 1
instance = comp, \state.start , state.start, uart_rx, 1
instance = comp, \Selector7~0 , Selector7~0, uart_rx, 1
instance = comp, \Selector7~1 , Selector7~1, uart_rx, 1
instance = comp, \state.data_bit , state.data_bit, uart_rx, 1
instance = comp, \bit_index[0]~0 , bit_index[0]~0, uart_rx, 1
instance = comp, \bit_index[0] , bit_index[0], uart_rx, 1
instance = comp, \bit_index~1 , bit_index~1, uart_rx, 1
instance = comp, \bit_index[1] , bit_index[1], uart_rx, 1
instance = comp, \Decoder0~0 , Decoder0~0, uart_rx, 1
instance = comp, \data_buffer[0]~0 , data_buffer[0]~0, uart_rx, 1
instance = comp, \data_buffer[0] , data_buffer[0], uart_rx, 1
instance = comp, \rx_msg[0]~reg0 , rx_msg[0]~reg0, uart_rx, 1
instance = comp, \rx_msg[1]~reg0feeder , rx_msg[1]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[1]~reg0 , rx_msg[1]~reg0, uart_rx, 1
instance = comp, \rx_msg[2]~reg0feeder , rx_msg[2]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[2]~reg0 , rx_msg[2]~reg0, uart_rx, 1
instance = comp, \rx_msg[3]~reg0feeder , rx_msg[3]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[3]~reg0 , rx_msg[3]~reg0, uart_rx, 1
instance = comp, \rx_msg[4]~reg0feeder , rx_msg[4]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[4]~reg0 , rx_msg[4]~reg0, uart_rx, 1
instance = comp, \rx_msg[5]~reg0feeder , rx_msg[5]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[5]~reg0 , rx_msg[5]~reg0, uart_rx, 1
instance = comp, \rx_msg[6]~reg0feeder , rx_msg[6]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[6]~reg0 , rx_msg[6]~reg0, uart_rx, 1
instance = comp, \rx_msg[7]~reg0 , rx_msg[7]~reg0, uart_rx, 1
instance = comp, \pb_flag~feeder , pb_flag~feeder, uart_rx, 1
instance = comp, \pb~1 , pb~1, uart_rx, 1
instance = comp, \pb~0 , pb~0, uart_rx, 1
instance = comp, \pb~2 , pb~2, uart_rx, 1
instance = comp, \parity_bit~feeder , parity_bit~feeder, uart_rx, 1
instance = comp, \rx_parity~reg0feeder , rx_parity~reg0feeder, uart_rx, 1
instance = comp, \rx_parity~reg0 , rx_parity~reg0, uart_rx, 1
instance = comp, \Selector0~0 , Selector0~0, uart_rx, 1
instance = comp, \Selector0~1 , Selector0~1, uart_rx, 1
instance = comp, \rx_complete~reg0 , rx_complete~reg0, uart_rx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
